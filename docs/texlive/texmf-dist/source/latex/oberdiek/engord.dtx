% \iffalse meta-comment
%
% File: engord.dtx
% Version: 2010/03/01 v1.8
% Info: Provides English ordinal numbers
%
% Copyright (C) 2000, 2003, 2006-2008, 2010 by
%    Heiko Oberdiek <heiko.oberdiek at googlemail.com>
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either
% version 1.3c of this license or (at your option) any later
% version. This version of this license is in
%    http://www.latex-project.org/lppl/lppl-1-3c.txt
% and the latest version of this license is in
%    http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of
% LaTeX version 2005/12/01 or later.
%
% This work has the LPPL maintenance status "maintained".
%
% This Current Maintainer of this work is Heiko Oberdiek.
%
% The Base Interpreter refers to any `TeX-Format',
% because some files are installed in TDS:tex/generic//.
%
% This work consists of the main source file engord.dtx
% and the derived files
%    engord.sty, engord.pdf, engord.ins, engord.drv, engord-test1.tex.
%
% Distribution:
%    CTAN:macros/latex/contrib/oberdiek/engord.dtx
%    CTAN:macros/latex/contrib/oberdiek/engord.pdf
%
% Unpacking:
%    (a) If engord.ins is present:
%           tex engord.ins
%    (b) Without engord.ins:
%           tex engord.dtx
%    (c) If you insist on using LaTeX
%           latex \let\install=y\input{engord.dtx}
%        (quote the arguments according to the demands of your shell)
%
% Documentation:
%    (a) If engord.drv is present:
%           latex engord.drv
%    (b) Without engord.drv:
%           latex engord.dtx; ...
%    The class ltxdoc loads the configuration file ltxdoc.cfg
%    if available. Here you can specify further options, e.g.
%    use A4 as paper format:
%       \PassOptionsToClass{a4paper}{article}
%
%    Programm calls to get the documentation (example):
%       pdflatex engord.dtx
%       makeindex -s gind.ist engord.idx
%       pdflatex engord.dtx
%       makeindex -s gind.ist engord.idx
%       pdflatex engord.dtx
%
% Installation:
%    TDS:tex/generic/oberdiek/engord.sty
%    TDS:doc/latex/oberdiek/engord.pdf
%    TDS:doc/latex/oberdiek/test/engord-test1.tex
%    TDS:source/latex/oberdiek/engord.dtx
%
%<*ignore>
\begingroup
  \catcode123=1 %
  \catcode125=2 %
  \def\x{LaTeX2e}%
\expandafter\endgroup
\ifcase 0\ifx\install y1\fi\expandafter
         \ifx\csname processbatchFile\endcsname\relax\else1\fi
         \ifx\fmtname\x\else 1\fi\relax
\else\csname fi\endcsname
%</ignore>
%<*install>
\input docstrip.tex
\Msg{************************************************************************}
\Msg{* Installation}
\Msg{* Package: engord 2010/03/01 v1.8 Provides English ordinal numbers (HO)}
\Msg{************************************************************************}

\keepsilent
\askforoverwritefalse

\let\MetaPrefix\relax
\preamble

This is a generated file.

Project: engord
Version: 2010/03/01 v1.8

Copyright (C) 2000, 2003, 2006-2008, 2010 by
   Heiko Oberdiek <heiko.oberdiek at googlemail.com>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License, either
version 1.3c of this license or (at your option) any later
version. This version of this license is in
   http://www.latex-project.org/lppl/lppl-1-3c.txt
and the latest version of this license is in
   http://www.latex-project.org/lppl.txt
and version 1.3 or later is part of all distributions of
LaTeX version 2005/12/01 or later.

This work has the LPPL maintenance status "maintained".

This Current Maintainer of this work is Heiko Oberdiek.

The Base Interpreter refers to any `TeX-Format',
because some files are installed in TDS:tex/generic//.

This work consists of the main source file engord.dtx
and the derived files
   engord.sty, engord.pdf, engord.ins, engord.drv, engord-test1.tex.

\endpreamble
\let\MetaPrefix\DoubleperCent

\generate{%
  \file{engord.ins}{\from{engord.dtx}{install}}%
  \file{engord.drv}{\from{engord.dtx}{driver}}%
  \usedir{tex/generic/oberdiek}%
  \file{engord.sty}{\from{engord.dtx}{package}}%
  \usedir{doc/latex/oberdiek/test}%
  \file{engord-test1.tex}{\from{engord.dtx}{test1}}%
  \nopreamble
  \nopostamble
  \usedir{source/latex/oberdiek/catalogue}%
  \file{engord.xml}{\from{engord.dtx}{catalogue}}%
}

\catcode32=13\relax% active space
\let =\space%
\Msg{************************************************************************}
\Msg{*}
\Msg{* To finish the installation you have to move the following}
\Msg{* file into a directory searched by TeX:}
\Msg{*}
\Msg{*     engord.sty}
\Msg{*}
\Msg{* To produce the documentation run the file `engord.drv'}
\Msg{* through LaTeX.}
\Msg{*}
\Msg{* Happy TeXing!}
\Msg{*}
\Msg{************************************************************************}

\endbatchfile
%</install>
%<*ignore>
\fi
%</ignore>
%<*driver>
\NeedsTeXFormat{LaTeX2e}
\ProvidesFile{engord.drv}%
  [2010/03/01 v1.8 Provides English ordinal numbers (HO)]%
\documentclass{ltxdoc}
\usepackage{holtxdoc}[2011/11/22]
\begin{document}
  \DocInput{engord.dtx}%
\end{document}
%</driver>
% \fi
%
% \CheckSum{557}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \GetFileInfo{engord.drv}
%
% \title{The \xpackage{engord} package}
% \date{2010/03/01 v1.8}
% \author{Heiko Oberdiek\\\xemail{heiko.oberdiek at googlemail.com}}
%
% \maketitle
%
% \begin{abstract}
% The package generates the suffix of English ordinal numbers.
% It can be used with plain and \LaTeX\ formats.
% \end{abstract}
%
% \tableofcontents
%
% \section{Usage}
%
% \begin{declcs}{engord}\,\M{\LaTeX\ counter name}
% \end{declcs}
% It prints the value of the \LaTeX\ counter as English
% ordinal number. It can be used in the same way as
% \cs{arabic}, \cs{roman}, or \cs{alph}. The command is
% not available in \plainTeX.
%
% \begin{declcs}{engordnumber}\,\M{any \TeX\ number}
% \end{declcs}
% It prints the number as English ordinal number.
%
% \begin{declcs}{engordletters}\,|{#1}|
% \end{declcs}
% This command formats the English ordinal letters
% after the number. It defaults to \cs{textsuperscript}.
%
% \begin{declcs}{engorderror}\,|{#1}|
% \end{declcs}
% It can be redefined, if an other error handling is
% wanted. The argument is a negative number or zero.
%
% \begin{declcs}{engordraisetrue}\\
%   \SpecialUsageIndex{\engordraisefalse}\cs{engordraisefalse}
% \end{declcs}
% These commands set the switch \cs{ifengordraise} that is
% asked by the default \cs{engordletters} before raising the
% ordinal letters.
%
% \subsection{Package options}
%
% \begin{description}
% \item[\xoption{normal}:] \cs{engordraisefalse}
% \item[\xoption{raise}:] \cs{engordraisetrue}
% \end{description}
% Default is \xoption{raise}.
%
% \subsection{Examples}
%
% \begin{itemize}
% \item
%   |\usepackage[normal]{engord}|\\
%   \begin{tabular}{@{}l@{ $\rightarrow$ }l@{}}
%     |\engordnumber{1}|   & 1st\\
%     |\engordnumber{12}|  & 12th\\
%     |\engordnumber{123}| & 123rd\\
%     |\engord{page}|      & 1st (if page has the value of one)\\
%     \multicolumn{2}{@{}l}{\cs{engordraisetrue}}\\
%     |\engordnumber{12}|  & 12\textsuperscript{th}
%   \end{tabular}
% \item
%     The default output of a counter can be redefined:
%     \begin{quote}
%       |\newcounter{mycounter}|\\
%       |\renewcommand{\theengcounter}{\engord{mycounter}}|
%     \end{quote}
% \item
%     Because the implementation of \cs{engord} and \cs{engordnumber}
%     is kept expandable, these commands can be used to make
%     command names with an appropriate definition of
%     \cs{engordletters}:
%     \begin{quote}
%       |\renewcommand*{\engordletters}[1]{#1}|\\
%       |\@namedef{My\engordnumber{3}Command}{...}|
%     \end{quote}
%     This generates the command name `\cs{My4rdCommand}'.
%     Since version 1.2 the redefinition can be dropped if
%     the letters are not raised.
% \item
%     If the letters should not be raised, use \LaTeX\ package
%     option \xoption{normal} or use
%     \begin{quote}
%       \cs{engordraisefalse}
%     \end{quote}
%     Also \cs{engordletters} could be redefined for this purpose:
%     \begin{quote}
%       |\renewcommand*{\engordletters}[1]{#1}|
%     \end{quote}
% \end{itemize}
%
% \StopEventually{
% }
%
% \section{Implementation}
%
% \subsection{Reload check and identification}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%    Reload check, especially if the package is not used with \LaTeX.
%    \begin{macrocode}
\begingroup\catcode61\catcode48\catcode32=10\relax%
  \catcode13=5 % ^^M
  \endlinechar=13 %
  \catcode35=6 % #
  \catcode39=12 % '
  \catcode44=12 % ,
  \catcode45=12 % -
  \catcode46=12 % .
  \catcode58=12 % :
  \catcode64=11 % @
  \catcode123=1 % {
  \catcode125=2 % }
  \expandafter\let\expandafter\x\csname ver@engord.sty\endcsname
  \ifx\x\relax % plain-TeX, first loading
  \else
    \def\empty{}%
    \ifx\x\empty % LaTeX, first loading,
      % variable is initialized, but \ProvidesPackage not yet seen
    \else
      \expandafter\ifx\csname PackageInfo\endcsname\relax
        \def\x#1#2{%
          \immediate\write-1{Package #1 Info: #2.}%
        }%
      \else
        \def\x#1#2{\PackageInfo{#1}{#2, stopped}}%
      \fi
      \x{engord}{The package is already loaded}%
      \aftergroup\endinput
    \fi
  \fi
\endgroup%
%    \end{macrocode}
%    Package identification:
%    \begin{macrocode}
\begingroup\catcode61\catcode48\catcode32=10\relax%
  \catcode13=5 % ^^M
  \endlinechar=13 %
  \catcode35=6 % #
  \catcode39=12 % '
  \catcode40=12 % (
  \catcode41=12 % )
  \catcode44=12 % ,
  \catcode45=12 % -
  \catcode46=12 % .
  \catcode47=12 % /
  \catcode58=12 % :
  \catcode64=11 % @
  \catcode91=12 % [
  \catcode93=12 % ]
  \catcode123=1 % {
  \catcode125=2 % }
  \expandafter\ifx\csname ProvidesPackage\endcsname\relax
    \def\x#1#2#3[#4]{\endgroup
      \immediate\write-1{Package: #3 #4}%
      \xdef#1{#4}%
    }%
  \else
    \def\x#1#2[#3]{\endgroup
      #2[{#3}]%
      \ifx#1\@undefined
        \xdef#1{#3}%
      \fi
      \ifx#1\relax
        \xdef#1{#3}%
      \fi
    }%
  \fi
\expandafter\x\csname ver@engord.sty\endcsname
\ProvidesPackage{engord}%
  [2010/03/01 v1.8 Provides English ordinal numbers (HO)]%
%    \end{macrocode}
%
% \subsection{Help commands for plain compatibility}
%
%    \begin{macrocode}
\begingroup\catcode61\catcode48\catcode32=10\relax%
  \catcode13=5 % ^^M
  \endlinechar=13 %
  \catcode123=1 % {
  \catcode125=2 % }
  \catcode64=11 % @
  \def\x{\endgroup
    \expandafter\edef\csname EO@AtEnd\endcsname{%
      \endlinechar=\the\endlinechar\relax
      \catcode13=\the\catcode13\relax
      \catcode32=\the\catcode32\relax
      \catcode35=\the\catcode35\relax
      \catcode61=\the\catcode61\relax
      \catcode64=\the\catcode64\relax
      \catcode123=\the\catcode123\relax
      \catcode125=\the\catcode125\relax
    }%
  }%
\x\catcode61\catcode48\catcode32=10\relax%
\catcode13=5 % ^^M
\endlinechar=13 %
\catcode35=6 % #
\catcode64=11 % @
\catcode123=1 % {
\catcode125=2 % }
\def\TMP@EnsureCode#1#2{%
  \edef\EO@AtEnd{%
    \EO@AtEnd
    \catcode#1=\the\catcode#1\relax
  }%
  \catcode#1=#2\relax
}
\TMP@EnsureCode{33}{12}% !
\TMP@EnsureCode{36}{3}% $
\TMP@EnsureCode{39}{12}% '
\TMP@EnsureCode{42}{12}% *
\TMP@EnsureCode{46}{12}% .
\TMP@EnsureCode{47}{12}% /
\TMP@EnsureCode{60}{12}% <
\TMP@EnsureCode{91}{12}% [
\TMP@EnsureCode{93}{12}% ]
\TMP@EnsureCode{94}{7}% ^(superscript)
\TMP@EnsureCode{96}{12}% `
\edef\EO@AtEnd{\EO@AtEnd\noexpand\endinput}
%    \end{macrocode}
%
%    \begin{macro}{\EO@def}
%    Definitions, \cs{newcommand} does not exist in \plainTeX.
%    \begin{macrocode}
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname newcommand\endcsname\relax
  \def\EO@def{\def}%
\else
  \def\EO@def#1{%
    \newcommand*{#1}{}%
    \def#1%
  }%
\fi
%    \end{macrocode}
%    \end{macro}
%    \begin{macrocode}
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname RequirePackage\endcsname\relax
  \input infwarerr.sty\relax
  \input ltxcmds.sty\relax
\else
  \RequirePackage{infwarerr}[2007/09/09]%
  \RequirePackage{ltxcmds}[2010/03/01]%
\fi
%    \end{macrocode}
%
% \subsection{User macros}
%
%    \begin{macro}{\ifengordraise}
%    The switch \cs{ifengordraise}, whether the ordinal letters
%    are raised or not. Default is raised because of compatibility.
%    \begin{macrocode}
\ltx@newif\ifengordraise
\engordraisetrue
%    \end{macrocode}
%    \end{macro}
%    In \LaTeX\ this also can be controlled by option \xoption{normal}
%    or \xoption{raise}.
%    \begin{macrocode}
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname DeclareOption\endcsname\relax
\else
  \DeclareOption{normal}{\engordraisefalse}%
  \DeclareOption{raise}{\engordraisetrue}%
  \ProcessOptions*\relax
\fi
%    \end{macrocode}
%
%    \begin{macro}{\engordletters}
%    \cs{engordletters} is called with one argument, the english
%    ordinal letters, and contains the code to format them. It
%    defaults to \cs{textsuperscript} depending on \cs{ifengordraise}.
%    \begin{macrocode}
\expandafter\ifx\csname engordletters\endcsname\relax
  \EO@def\engordletters{%
    \ifengordraise
      \expandafter\engordtextsuperscript
    \fi
  }%
\fi
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}{\engordtextsuperscript}
%    For \plainTeX\ the definition is quite ugly, redefine
%    \cs{engordtextsuperscript} if you have a better one.
%    \begin{macrocode}
\expandafter\ifx\csname engordtextsuperscript\endcsname\relax
  \begingroup\expandafter\expandafter\expandafter\endgroup
  \expandafter\ifx\csname textsuperscript\endcsname\relax
    \def\engordtextsuperscript#1{%
      \relax
      \ifmmode
        ^{\rm#1}%
      \else
        $^{\rm#1}$%
      \fi
    }%
  \else
    \def\engordtextsuperscript{\textsuperscript}%
  \fi
\fi
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}{\engorderror}
%    \cs{engorderror} is called, if the number is zero
%    or negative.
%    \begin{macrocode}
\expandafter\ifx\csname engorderror\endcsname\relax
  \EO@def\engorderror#1{%
    #1\engordletters{!ERROR!}%
    \@PackageWarning{engord}{%
      `#1' is not an ordinal number%
    }%
  }%
\fi
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}{\engord}
%    \cs{engord} expects a \LaTeX\ counter name as argument and
%    calls \cs{engordnumber}. It is defined only, if \LaTeX\ is used.
%    \begin{macrocode}
\begingroup\expandafter\expandafter\expandafter\endgroup
\expandafter\ifx\csname newcounter\endcsname\relax
\else
  \EO@def\engord#1{%
    \engordnumber{\value{#1}}%
  }%
\fi
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}{\engordnumber}
%    \cs{engordnumber} is the user command to print a number as
%    english ordinal number. The argument can be any
%    \TeX\ number like explicit numbers, register values, \dots
%
%    In a safe way it converts the \TeX\ number argument
%    into a form that only consists of decimal digits.
%    \begin{macrocode}
\EO@def\engordnumber#1{%
  \expandafter\EO@number\expandafter{\number#1}%
}
%    \end{macrocode}
%    \end{macro}
%
% \subsection{Suffix generation}
%
%    \begin{macro}{\EO@number}
%    \cs{EO@number} expects a number with decimal digits as
%    argument and looks at the size of the number and
%    the count of the digits:
%    \begin{macrocode}
\def\EO@number#1{%
  \ifnum#1<1 % handle the error case
    \engorderror{#1}%
  \else
    \ifnum#1<21 %
      \EO@ord{#1}%
    \else
      \ifnum#1<100 %
        \EO@twodigits#1%
      \else
        \@ReturnAfterFi{%
          \EO@reverse#1\@nil{}\EO@afterreverse
        }%
      \fi
    \fi
  \fi
}
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}{\@ReturnAfterFi}
%    An internal help macro to prevent a too deep \cs{if} nesting.
%    \begin{macrocode}
\long\def\@ReturnAfterFi#1\fi{\fi#1}
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}{\EO@ord}
%    \cs{EO@ord} prints the number with ord letters.\\
%    |#1|: decimal digits, |#1| $<$ 21
%    \begin{macrocode}
\def\EO@ord#1{%
  #1%
  \expandafter\engordletters
  \ifcase#1{th}\or
    {st}\or
    {nd}\or
    {rd}\else
    {th}%
  \fi
}
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}{\EO@twodigits}
%    \cs{EO@twodigits} expects a number with two digits,\\
%    20 $<$ number $<$ 100
%    \begin{macrocode}
\def\EO@twodigits#1#2{%
  #1\EO@ord{#2}%
}
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}{\EO@reverse}
%    \cs{EO@reverse} reverses the digits of the number.\\
%    |#1|: next digit\\
%    |#2|: rest of the digits\\
%    |#3|: already reversed digits\\
%    |#4|: next command to call with the reversed number
%    as argument
%    \begin{macrocode}
\def\EO@reverse#1#2\@nil#3#4{%
  \ifx\\#2\\%
    #4{#1#3}%
  \else
    \@ReturnAfterFi{%
      \EO@reverse#2\@nil{#1#3}{#4}%
    }%
  \fi
}
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}{\EO@afterreverse}
%    \cs{EO@afterreverse} calls \cs{EO@reverseback} so that
%    \cs{EO@reverseback} can inspect the digits of the number.
%    \begin{macrocode}
\def\EO@afterreverse#1{%
  \EO@reverseback#1\@nil
}
%    \end{macrocode}
%    \end{macro}
%    \begin{macro}{\EO@reverseback}
%    \cs{EO@reverseback} reverses the reversion.\\
%    |#1|: the last digit of the number\\
%    |#2|: the second last digit of the number\\
%    |#3|: first digits of the number in reversed order,
%     it is not empty, because \cs{EO@reverseback} is
%     only called with numbers $>$ 100.
%    \begin{macrocode}
\def\EO@reverseback#1#2#3\@nil{%
  \EO@reverse#3\@nil{}\@firstofone
  \ifnum#2#1<21 %
    \EO@ord{#2#1}%
  \else
    #2\EO@ord{#1}%
  \fi
}
%    \end{macrocode}
%    \end{macro}
%
%    \begin{macrocode}
\EO@AtEnd%
%    \end{macrocode}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \section{Test}
%
% \subsection{Catcode checks for loading}
%
%    \begin{macrocode}
%<*test1>
%    \end{macrocode}
%    \begin{macrocode}
\catcode`\{=1 %
\catcode`\}=2 %
\catcode`\#=6 %
\catcode`\@=11 %
\expandafter\ifx\csname count@\endcsname\relax
  \countdef\count@=255 %
\fi
\expandafter\ifx\csname @gobble\endcsname\relax
  \long\def\@gobble#1{}%
\fi
\expandafter\ifx\csname @firstofone\endcsname\relax
  \long\def\@firstofone#1{#1}%
\fi
\expandafter\ifx\csname loop\endcsname\relax
  \expandafter\@firstofone
\else
  \expandafter\@gobble
\fi
{%
  \def\loop#1\repeat{%
    \def\body{#1}%
    \iterate
  }%
  \def\iterate{%
    \body
      \let\next\iterate
    \else
      \let\next\relax
    \fi
    \next
  }%
  \let\repeat=\fi
}%
\def\RestoreCatcodes{}
\count@=0 %
\loop
  \edef\RestoreCatcodes{%
    \RestoreCatcodes
    \catcode\the\count@=\the\catcode\count@\relax
  }%
\ifnum\count@<255 %
  \advance\count@ 1 %
\repeat

\def\RangeCatcodeInvalid#1#2{%
  \count@=#1\relax
  \loop
    \catcode\count@=15 %
  \ifnum\count@<#2\relax
    \advance\count@ 1 %
  \repeat
}
\def\RangeCatcodeCheck#1#2#3{%
  \count@=#1\relax
  \loop
    \ifnum#3=\catcode\count@
    \else
      \errmessage{%
        Character \the\count@\space
        with wrong catcode \the\catcode\count@\space
        instead of \number#3%
      }%
    \fi
  \ifnum\count@<#2\relax
    \advance\count@ 1 %
  \repeat
}
\def\space{ }
\expandafter\ifx\csname LoadCommand\endcsname\relax
  \def\LoadCommand{\input engord.sty\relax}%
\fi
\def\Test{%
  \RangeCatcodeInvalid{0}{47}%
  \RangeCatcodeInvalid{58}{64}%
  \RangeCatcodeInvalid{91}{96}%
  \RangeCatcodeInvalid{123}{255}%
  \catcode`\@=12 %
  \catcode`\\=0 %
  \catcode`\%=14 %
  \LoadCommand
  \RangeCatcodeCheck{0}{36}{15}%
  \RangeCatcodeCheck{37}{37}{14}%
  \RangeCatcodeCheck{38}{47}{15}%
  \RangeCatcodeCheck{48}{57}{12}%
  \RangeCatcodeCheck{58}{63}{15}%
  \RangeCatcodeCheck{64}{64}{12}%
  \RangeCatcodeCheck{65}{90}{11}%
  \RangeCatcodeCheck{91}{91}{15}%
  \RangeCatcodeCheck{92}{92}{0}%
  \RangeCatcodeCheck{93}{96}{15}%
  \RangeCatcodeCheck{97}{122}{11}%
  \RangeCatcodeCheck{123}{255}{15}%
  \RestoreCatcodes
}
\Test
\csname @@end\endcsname
\end
%    \end{macrocode}
%    \begin{macrocode}
%</test1>
%    \end{macrocode}
%
% \section{Installation}
%
% \subsection{Download}
%
% \paragraph{Package.} This package is available on
% CTAN\footnote{\url{ftp://ftp.ctan.org/tex-archive/}}:
% \begin{description}
% \item[\CTAN{macros/latex/contrib/oberdiek/engord.dtx}] The source file.
% \item[\CTAN{macros/latex/contrib/oberdiek/engord.pdf}] Documentation.
% \end{description}
%
%
% \paragraph{Bundle.} All the packages of the bundle `oberdiek'
% are also available in a TDS compliant ZIP archive. There
% the packages are already unpacked and the documentation files
% are generated. The files and directories obey the TDS standard.
% \begin{description}
% \item[\CTAN{install/macros/latex/contrib/oberdiek.tds.zip}]
% \end{description}
% \emph{TDS} refers to the standard ``A Directory Structure
% for \TeX\ Files'' (\CTAN{tds/tds.pdf}). Directories
% with \xfile{texmf} in their name are usually organized this way.
%
% \subsection{Bundle installation}
%
% \paragraph{Unpacking.} Unpack the \xfile{oberdiek.tds.zip} in the
% TDS tree (also known as \xfile{texmf} tree) of your choice.
% Example (linux):
% \begin{quote}
%   |unzip oberdiek.tds.zip -d ~/texmf|
% \end{quote}
%
% \paragraph{Script installation.}
% Check the directory \xfile{TDS:scripts/oberdiek/} for
% scripts that need further installation steps.
% Package \xpackage{attachfile2} comes with the Perl script
% \xfile{pdfatfi.pl} that should be installed in such a way
% that it can be called as \texttt{pdfatfi}.
% Example (linux):
% \begin{quote}
%   |chmod +x scripts/oberdiek/pdfatfi.pl|\\
%   |cp scripts/oberdiek/pdfatfi.pl /usr/local/bin/|
% \end{quote}
%
% \subsection{Package installation}
%
% \paragraph{Unpacking.} The \xfile{.dtx} file is a self-extracting
% \docstrip\ archive. The files are extracted by running the
% \xfile{.dtx} through \plainTeX:
% \begin{quote}
%   \verb|tex engord.dtx|
% \end{quote}
%
% \paragraph{TDS.} Now the different files must be moved into
% the different directories in your installation TDS tree
% (also known as \xfile{texmf} tree):
% \begin{quote}
% \def\t{^^A
% \begin{tabular}{@{}>{\ttfamily}l@{ $\rightarrow$ }>{\ttfamily}l@{}}
%   engord.sty & tex/generic/oberdiek/engord.sty\\
%   engord.pdf & doc/latex/oberdiek/engord.pdf\\
%   test/engord-test1.tex & doc/latex/oberdiek/test/engord-test1.tex\\
%   engord.dtx & source/latex/oberdiek/engord.dtx\\
% \end{tabular}^^A
% }^^A
% \sbox0{\t}^^A
% \ifdim\wd0>\linewidth
%   \begingroup
%     \advance\linewidth by\leftmargin
%     \advance\linewidth by\rightmargin
%   \edef\x{\endgroup
%     \def\noexpand\lw{\the\linewidth}^^A
%   }\x
%   \def\lwbox{^^A
%     \leavevmode
%     \hbox to \linewidth{^^A
%       \kern-\leftmargin\relax
%       \hss
%       \usebox0
%       \hss
%       \kern-\rightmargin\relax
%     }^^A
%   }^^A
%   \ifdim\wd0>\lw
%     \sbox0{\small\t}^^A
%     \ifdim\wd0>\linewidth
%       \ifdim\wd0>\lw
%         \sbox0{\footnotesize\t}^^A
%         \ifdim\wd0>\linewidth
%           \ifdim\wd0>\lw
%             \sbox0{\scriptsize\t}^^A
%             \ifdim\wd0>\linewidth
%               \ifdim\wd0>\lw
%                 \sbox0{\tiny\t}^^A
%                 \ifdim\wd0>\linewidth
%                   \lwbox
%                 \else
%                   \usebox0
%                 \fi
%               \else
%                 \lwbox
%               \fi
%             \else
%               \usebox0
%             \fi
%           \else
%             \lwbox
%           \fi
%         \else
%           \usebox0
%         \fi
%       \else
%         \lwbox
%       \fi
%     \else
%       \usebox0
%     \fi
%   \else
%     \lwbox
%   \fi
% \else
%   \usebox0
% \fi
% \end{quote}
% If you have a \xfile{docstrip.cfg} that configures and enables \docstrip's
% TDS installing feature, then some files can already be in the right
% place, see the documentation of \docstrip.
%
% \subsection{Refresh file name databases}
%
% If your \TeX~distribution
% (\teTeX, \mikTeX, \dots) relies on file name databases, you must refresh
% these. For example, \teTeX\ users run \verb|texhash| or
% \verb|mktexlsr|.
%
% \subsection{Some details for the interested}
%
% \paragraph{Attached source.}
%
% The PDF documentation on CTAN also includes the
% \xfile{.dtx} source file. It can be extracted by
% AcrobatReader 6 or higher. Another option is \textsf{pdftk},
% e.g. unpack the file into the current directory:
% \begin{quote}
%   \verb|pdftk engord.pdf unpack_files output .|
% \end{quote}
%
% \paragraph{Unpacking with \LaTeX.}
% The \xfile{.dtx} chooses its action depending on the format:
% \begin{description}
% \item[\plainTeX:] Run \docstrip\ and extract the files.
% \item[\LaTeX:] Generate the documentation.
% \end{description}
% If you insist on using \LaTeX\ for \docstrip\ (really,
% \docstrip\ does not need \LaTeX), then inform the autodetect routine
% about your intention:
% \begin{quote}
%   \verb|latex \let\install=y\input{engord.dtx}|
% \end{quote}
% Do not forget to quote the argument according to the demands
% of your shell.
%
% \paragraph{Generating the documentation.}
% You can use both the \xfile{.dtx} or the \xfile{.drv} to generate
% the documentation. The process can be configured by the
% configuration file \xfile{ltxdoc.cfg}. For instance, put this
% line into this file, if you want to have A4 as paper format:
% \begin{quote}
%   \verb|\PassOptionsToClass{a4paper}{article}|
% \end{quote}
% An example follows how to generate the
% documentation with pdf\LaTeX:
% \begin{quote}
%\begin{verbatim}
%pdflatex engord.dtx
%makeindex -s gind.ist engord.idx
%pdflatex engord.dtx
%makeindex -s gind.ist engord.idx
%pdflatex engord.dtx
%\end{verbatim}
% \end{quote}
%
% \section{Catalogue}
%
% The following XML file can be used as source for the
% \href{http://mirror.ctan.org/help/Catalogue/catalogue.html}{\TeX\ Catalogue}.
% The elements \texttt{caption} and \texttt{description} are imported
% from the original XML file from the Catalogue.
% The name of the XML file in the Catalogue is \xfile{engord.xml}.
%    \begin{macrocode}
%<*catalogue>
<?xml version='1.0' encoding='us-ascii'?>
<!DOCTYPE entry SYSTEM 'catalogue.dtd'>
<entry datestamp='$Date$' modifier='$Author$' id='engord'>
  <name>engord</name>
  <caption>Converts numbers to English ordinal numbers.</caption>
  <authorref id='auth:oberdiek'/>
  <copyright owner='Heiko Oberdiek' year='2000,2003,2006-2008,2010'/>
  <license type='lppl1.3'/>
  <version number='1.8'/>
  <description>
    Defines <tt>\engord</tt> (used like <tt>\arabic</tt>,
    <tt>\roman</tt>, etc.), and <tt>\engordnumber</tt> (which formats
    a &#x201C;TeX number&#x201D;).
    <p/>
    So <tt>\pagenumbering{engord}</tt> gives page numbers <tt>1st,
    2nd, 3rd, ...</tt>
    <p/>
    The package is part of the <xref refid='oberdiek'>oberdiek</xref>
    bundle.
  </description>
  <documentation details='Package documentation'
      href='ctan:/macros/latex/contrib/oberdiek/engord.pdf'/>
  <ctan file='true' path='/macros/latex/contrib/oberdiek/engord.dtx'/>
  <miktex location='oberdiek'/>
  <texlive location='oberdiek'/>
  <install path='/macros/latex/contrib/oberdiek/oberdiek.tds.zip'/>
</entry>
%</catalogue>
%    \end{macrocode}
%
% \begin{History}
%   \begin{Version}{2000/05/23 v1.0}
%   \item
%     First public release, published in newsgroup \xnewsgroup{de.comp.text.tex}:\\
%     \URL{``\link{Re: Ordinalzahlen in LaTeX?}''}^^A
%     {http://groups.google.com/group/de.comp.text.tex/msg/738e2cb4c51759d6}
%   \end{Version}
%   \begin{Version}{2003/04/28 v1.1}
%   \item
%     Bug fix for 30, 40, 50, \dots, 100, 130, \dots
%   \item
%     \cs{ordletters} renamed to documented \cs{engordletters}.
%   \end{Version}
%   \begin{Version}{2006/02/20 v1.2}
%   \item
%     Support for \plainTeX.
%   \item
%     Switch \cs{ifengordraise} added.
%   \item
%     Package options \xoption{raise} and \xoption{normal} added.
%   \item
%     DTX framework.
%   \end{Version}
%   \begin{Version}{2007/04/11 v1.3}
%   \item
%     Line ends sanitized.
%   \end{Version}
%   \begin{Version}{2007/04/26 v1.4}
%   \item
%     Use of package \xpackage{infwarerr}.
%   \end{Version}
%   \begin{Version}{2007/09/09 v1.5}
%   \item
%     Catcode section added.
%   \end{Version}
%   \begin{Version}{2007/09/20 v1.6}
%   \item
%     Short description fixed (George White).
%   \end{Version}
%   \begin{Version}{2008/08/11 v1.7}
%   \item
%     Code is not changed.
%   \item
%     URLs updated.
%   \end{Version}
%   \begin{Version}{2010/03/01 v1.8}
%   \item
%     Compatibility with \iniTeX.
%   \end{Version}
% \end{History}
%
% \PrintIndex
%
% \Finale
\endinput
